#!/usr/bin/env bash
# ~/.tmux.conf
# High-performance, minimalist tmux configuration for cyber ops and development
# Compatible with tmux 3.2+ (optimized for 3.3a+)
# System: Kali Linux + Alacritty + Hyprland + NeoVim + Sierra CLI

#########################
# üß± CORE CONFIGURATION
#########################

# Set prefix key to Ctrl+Space (more ergonomic than Ctrl+b)
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Enable 256 color support and true color
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# UTF-8 support (deprecated in tmux 2.2+, now enabled by default)
# set -g utf8 on
# set -g status-utf8 on

# Disable mouse (keyboard-only workflow)
set -g mouse off

# Silence terminal bell
set -g bell-action none
set -g visual-bell off

# Fast command sequences
set -s escape-time 0
set -sg repeat-time 600

# Increase scrollback buffer size
set -g history-limit 10000

# Enable focus events for better integration with editors
set -g focus-events on

# Renumber windows when one is closed
set -g renumber-windows on

# Start window and pane indices at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

#########################
# üé® VISUAL STYLING
#########################

# Rounded corners support (tmux 3.3+)
set -g popup-border-style "rounded"
set -g popup-border-lines "rounded"

# Color definitions
color_bg="#000000"          # Pure black background
color_orange="#FF4F00"      # Neon orange highlights
color_gray="#333333"        # Dark gray for inactive elements
color_white="#FFFFFF"       # White text
color_dim="#666666"         # Dimmed text

# Window status styling
set -g window-status-style "fg=${color_dim},bg=${color_bg}"
set -g window-status-current-style "fg=${color_orange},bg=${color_bg},bold"
set -g window-status-activity-style "fg=${color_orange},bg=${color_bg}"

# Pane border styling
set -g pane-border-style "fg=${color_gray}"
set -g pane-active-border-style "fg=${color_orange}"

# Command line styling
set -g message-style "fg=${color_white},bg=${color_bg}"
set -g message-command-style "fg=${color_white},bg=${color_bg}"

#########################
# üìä STATUS BAR CONFIG
#########################

# Enable status bar
set -g status on
set -g status-position bottom
set -g status-justify left

# Status bar colors
set -g status-style "fg=${color_white},bg=${color_bg}"

# Status bar update interval (seconds)
set -g status-interval 5

# Status bar format
set -g status-left-length 40
set -g status-right-length 150

# Left side: session name with orange highlight
set -g status-left "#[fg=${color_orange},bold]‚ùØ #S #[fg=${color_dim}]‚îÇ "

# Right side: comprehensive system info with plugins (optimized)
set -g status-right "#{prefix_highlight}#[fg=${color_dim}]#{git_branch} #[fg=${color_dim}]‚îÇ #[fg=${color_orange}]#{cpu_percentage} #[fg=${color_dim}]‚îÇ #{battery_status_fg}#{battery_icon} #{battery_percentage} #[fg=${color_dim}]‚îÇ #[fg=${color_white}]%Y-%m-%d #[fg=${color_dim}]‚îÇ #[fg=${color_orange},bold]%H:%M"

# Window status format
set -g window-status-format "#[fg=${color_dim}] #I:#W "
set -g window-status-current-format "#[fg=${color_orange},bold] #I:#W "

# Show activity in other windows
set -g monitor-activity on
set -g visual-activity off

#########################
# ‚å®Ô∏è  KEY BINDINGS
#########################

# Reload tmux config
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Session management
bind S command-prompt -p "New session name:" "new-session -d -s '%1'"
bind K confirm-before -p "Kill session #S? (y/n)" kill-session

# Window management
bind c new-window -c "#{pane_current_path}"
bind , command-prompt -p "Rename window:" "rename-window '%%'"
bind . command-prompt -p "Move window to:" "move-window -t '%%'"

# Pane splitting (keeping current path)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"  # Default horizontal
bind '"' split-window -v -c "#{pane_current_path}"  # Default vertical

# Pane navigation with vim-like keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing with Ctrl+Alt+arrows
bind -n C-M-Left resize-pane -L 5
bind -n C-M-Right resize-pane -R 5
bind -n C-M-Up resize-pane -U 5
bind -n C-M-Down resize-pane -D 5

# Quick pane switching
bind Tab last-pane
bind Space next-layout

# Copy mode enhancements
bind v copy-mode
bind V copy-mode \; send-keys "0v\$"
bind p paste-buffer

# Copy mode vi-style keys
set -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Quick window switching
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

#########################
# üîß INTEGRATIONS
#########################

# NeoVim integration
bind n new-window -c "#{pane_current_path}" -n "nvim" "nvim"
bind N split-window -c "#{pane_current_path}" "nvim"

# Sierra CLI integration
bind s new-window -c "#{pane_current_path}" -n "sierra" "sierra"

# Additional development tools integration
bind t new-window -c "#{pane_current_path}" -n "htop" "htop"
bind m new-window -c "#{pane_current_path}" -n "btop" "btop"
bind w new-window -c "#{pane_current_path}" -n "wifi" "sudo iwctl"
bind f new-window -c "#{pane_current_path}" -n "files" "ranger"

# Git integration (requires tmux-git plugin or custom script)
# Set up a simple git branch display function
set -g @git_branch_cmd "git branch --show-current 2>/dev/null || echo ''"

#########################
# üöÄ PERFORMANCE SETTINGS
#########################

# Aggressive resize for better performance
set -g aggressive-resize on

# Reduce status update frequency when no activity
set -g status-interval 5

# Optimize for fast terminal updates
set -g display-time 1000
set -g display-panes-time 800

# Buffer settings for smooth scrolling
set -g alternate-screen on

#########################
# üîÑ SESSION MANAGEMENT
#########################

# Session restore capabilities
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-strategy-vim 'session'

# Auto-save session every 15 minutes
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

#########################
# üîå CLIPBOARD INTEGRATION
#########################

# Clipboard integration for Wayland (wl-copy)
if-shell "command -v wl-copy" {
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "wl-copy"
    bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "wl-copy"
}

# Fallback to OSC52 for remote sessions
if-shell "[ -n \"$SSH_CONNECTION\" ]" {
    bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "tmux show-buffer | base64 -w0 | printf '\033]52;c;%s\a' \$(cat)"
}

#########################
# üéØ QUICK ACTIONS
#########################

# Clear screen and history
bind C-l send-keys 'C-l' \; clear-history

# Toggle status bar
bind b set-option -g status

# Zoom pane toggle
bind z resize-pane -Z

# Synchronize panes (useful for cluster management)
bind e set-window-option synchronize-panes

# Create new session in current directory
bind C-c new-session -c "#{pane_current_path}"

#########################
# üì± PLUGIN MANAGEMENT
#########################

# Plugin manager (TPM) - Essential plugins for cyber ops (2025 optimized)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'sainnhe/tmux-fzf'
# Removed: tmux-net-speed (causing performance issues), tmux-logging (security risk), tmux-sessionist (redundant with built-in)

# Plugin configurations
set -g @tmux_power_theme '#FF4F00'
set -g @tmux_power_date_format '%Y-%m-%d'
set -g @tmux_power_time_format '%H:%M'
set -g @tmux_power_left_arrow_icon ''
set -g @tmux_power_right_arrow_icon ''
set -g @tmux_power_user_icon '‚ö°'
set -g @tmux_power_session_icon 'üöÄ'
set -g @tmux_power_upload_speed_icon '‚Üë'
set -g @tmux_power_download_speed_icon '‚Üì'
set -g @tmux_power_prefix_highlight_pos 'LR'

# FZF integration
set -g @tmux-fzf-launch-key 'C-f'

# Prefix highlight plugin
set -g @prefix_highlight_fg '#FF4F00'
set -g @prefix_highlight_bg '#000000'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=#FF4F00,bg=#000000'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=#FF4F00,bg=#000000'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_sync_prompt 'SYNC'

# Battery plugin settings
set -g @batt_icon_status_charged 'üîã'
set -g @batt_icon_status_charging '‚ö°'
set -g @batt_icon_status_discharging 'üîã'
set -g @batt_color_full_charge '#FF4F00'
set -g @batt_color_high_charge '#FF4F00'
set -g @batt_color_medium_charge '#FFAA00'
set -g @batt_color_low_charge '#FF0000'

# CPU plugin settings
set -g @cpu_low_icon "="
set -g @cpu_medium_icon "‚â°"
set -g @cpu_high_icon "‚â£"
set -g @cpu_low_fg_color "#[fg=#FF4F00]"
set -g @cpu_medium_fg_color "#[fg=#FFAA00]"
set -g @cpu_high_fg_color "#[fg=#FF0000]"

# Network speed plugin (removed for performance)
# set -g @net_speed_interfaces "wlan0 eth0"
# set -g @net_speed_format "‚Üì%10s ‚Üë%10s"

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'

#########################
# üêõ DEBUGGING & LOGGING
#########################

# Enable logging for debugging and forensics
set -g @logging-path "$HOME/.tmux/logs"
set -g @screen-capture-path "$HOME/.tmux/logs"
set -g @save-complete-history-path "$HOME/.tmux/logs"

# Advanced logging plugins (removed for security and performance)
# set -g @plugin 'tmux-plugins/tmux-logging'  # Security risk - logs sensitive data
# set -g @plugin 'tmux-plugins/tmux-sessionist'  # Redundant with built-in session management

# Logging key bindings
bind-key P run-shell 'mkdir -p ~/.tmux/logs'
bind-key L pipe-pane -o 'cat >> ~/.tmux/logs/session-#S-window-#I-pane-#P.log' \; display-message 'Toggled logging to ~/.tmux/logs/session-#S-window-#I-pane-#P.log'

# Screenshot and history capture
set -g @save-complete-history-key 'M-s'
set -g @screen-capture-key 'M-c'
set -g @save-visible-text-key 'M-v'

# Session management enhancements
set -g @sessionist-goto 'g'
set -g @sessionist-new 'C-g'
set -g @sessionist-kill 'X'
set -g @sessionist-alternate 'S'

#########################
# üèÅ FINAL SETTINGS
#########################

# Ensure new panes/windows inherit current path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Custom functions for git branch display
run-shell 'tmux set-option -g @git_branch "$(git branch --show-current 2>/dev/null || echo "")"'

# Additional cyber ops enhancements
bind-key C-n new-session -d -s "recon" -c "$HOME" \; split-window -v -p 30 \; select-pane -t 0 \; send-keys "nmap -sn 192.168.1.0/24" Enter \; select-pane -t 1 \; send-keys "sudo netstat -tuln" Enter
bind-key C-p new-session -d -s "pentest" -c "$HOME" \; split-window -h -p 50 \; select-pane -t 0 \; send-keys "msfconsole" Enter \; select-pane -t 1 \; send-keys "sudo nmap -sS -O -A" 
bind-key C-s new-session -d -s "sysmon" -c "$HOME" \; split-window -v -p 30 \; split-window -h -p 50 \; select-pane -t 0 \; send-keys "htop" Enter \; select-pane -t 1 \; send-keys "sudo journalctl -f" Enter \; select-pane -t 2 \; send-keys "sudo ss -tuln" Enter
bind-key C-f new-session -d -s "forensics" -c "$HOME" \; split-window -v -p 30 \; select-pane -t 0 \; send-keys "sudo volatility3 -h" Enter \; select-pane -t 1 \; send-keys "ls -la /var/log/" Enter

# Auto-start essential cyber ops tools (uncomment if desired)
# new-session -d -s "main" -c "$HOME"
# new-window -t main -n "sierra" "sierra"
# new-window -t main -n "nvim" "nvim"
# new-window -t main -n "monitor" "htop"
# select-window -t main:0

# Performance monitoring shortcuts
bind-key M-p new-window -c "#{pane_current_path}" -n "perf" "sudo perf top"
bind-key M-i new-window -c "#{pane_current_path}" -n "iotop" "sudo iotop"
bind-key M-n new-window -c "#{pane_current_path}" -n "nethogs" "sudo nethogs"

# Quick log access
bind-key M-l new-window -c "/var/log" -n "logs" "sudo tail -f /var/log/syslog"
bind-key M-a new-window -c "/var/log" -n "auth" "sudo tail -f /var/log/auth.log"
bind-key M-k new-window -c "/var/log" -n "kern" "sudo tail -f /var/log/kern.log"

# Display message on config load
display "Enhanced Tmux config loaded! üöÄ‚ö° Ready for cyber ops and development with full plugin support." 